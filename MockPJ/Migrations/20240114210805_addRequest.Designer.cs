// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MockPJ.Models;

#nullable disable

namespace MockPJ.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20240114210805_addRequest")]
    partial class addRequest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MockPJ.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressID"));

                    b.Property<string>("Addresses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoogleMapLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AddressID");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressID = 1,
                            Addresses = "so 1, ngách 1, ngõ 1, đường 1",
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1103),
                            GoogleMapLocation = "111111,1111111"
                        },
                        new
                        {
                            AddressID = 2,
                            Addresses = "so 2, ngách 1, ngõ 1, đường 1",
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1108),
                            GoogleMapLocation = "111111,1111111"
                        },
                        new
                        {
                            AddressID = 3,
                            Addresses = "so 3, ngách 1, ngõ 1, đường 1",
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1110),
                            GoogleMapLocation = "111111,1111111"
                        });
                });

            modelBuilder.Entity("MockPJ.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<string>("CampusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampusId");

                    b.HasIndex("AddressID");

                    b.ToTable("Campuses");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            AddressID = 1,
                            CampusName = "Campus A",
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1239)
                        });
                });

            modelBuilder.Entity("MockPJ.Models.Commune", b =>
                {
                    b.Property<int>("CommuneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommuneID"));

                    b.Property<string>("CommuneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistrictID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CommuneID");

                    b.HasIndex("DistrictID");

                    b.ToTable("Communes");

                    b.HasData(
                        new
                        {
                            CommuneID = 1,
                            CommuneName = "Phuong Lien",
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1351),
                            DistrictID = 1
                        });
                });

            modelBuilder.Entity("MockPJ.Models.District", b =>
                {
                    b.Property<int>("DistrictID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DistrictID");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            DistrictID = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1306),
                            DistrictName = "Dong Da"
                        });
                });

            modelBuilder.Entity("MockPJ.Models.House", b =>
                {
                    b.Property<int>("HouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HouseID"));

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<int?>("CampusID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LandLordID")
                        .HasColumnType("int");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("PowerPrice")
                        .HasColumnType("real");

                    b.Property<int?>("VillageID")
                        .HasColumnType("int");

                    b.Property<float>("WaterPrice")
                        .HasColumnType("real");

                    b.HasKey("HouseID");

                    b.HasIndex("AddressID")
                        .IsUnique();

                    b.HasIndex("CampusID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LandLordID");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("VillageID");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            HouseID = 1,
                            AddressID = 1,
                            CampusID = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1503),
                            HouseName = "House A",
                            Information = "AC, Hot water",
                            LandLordID = 3,
                            PowerPrice = 4000f,
                            VillageID = 1,
                            WaterPrice = 30000f
                        },
                        new
                        {
                            HouseID = 2,
                            AddressID = 2,
                            CampusID = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1514),
                            HouseName = "House B",
                            Information = "AC, Hot water",
                            LandLordID = 3,
                            PowerPrice = 4000f,
                            VillageID = 1,
                            WaterPrice = 30000f
                        },
                        new
                        {
                            HouseID = 3,
                            AddressID = 3,
                            CampusID = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1517),
                            HouseName = "House C",
                            Information = "AC, Hot water",
                            LandLordID = 3,
                            PowerPrice = 4000f,
                            VillageID = 1,
                            WaterPrice = 30000f
                        });
                });

            modelBuilder.Entity("MockPJ.Models.HouseImage", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HouseID")
                        .HasColumnType("int");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ImageID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HouseID");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("HouseImages");

                    b.HasData(
                        new
                        {
                            ImageID = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1593),
                            HouseID = 1,
                            ImageLink = "link"
                        },
                        new
                        {
                            ImageID = 2,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1596),
                            HouseID = 1,
                            ImageLink = "link"
                        },
                        new
                        {
                            ImageID = 3,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1597),
                            HouseID = 2,
                            ImageLink = "link"
                        },
                        new
                        {
                            ImageID = 4,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1599),
                            HouseID = 2,
                            ImageLink = "link"
                        },
                        new
                        {
                            ImageID = 5,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1601),
                            HouseID = 3,
                            ImageLink = "link"
                        },
                        new
                        {
                            ImageID = 6,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1652),
                            HouseID = 3,
                            ImageLink = "link"
                        },
                        new
                        {
                            ImageID = 7,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1653),
                            HouseID = 3,
                            ImageLink = "link"
                        });
                });

            modelBuilder.Entity("MockPJ.Models.Rate", b =>
                {
                    b.Property<int>("RateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RateID"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HouseID")
                        .HasColumnType("int");

                    b.Property<string>("LandLordReply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("RateID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HouseID");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("StudentID");

                    b.ToTable("Rates");

                    b.HasData(
                        new
                        {
                            RateID = 1,
                            Comment = "good",
                            CreatedBy = 4,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(2052),
                            HouseID = 1,
                            LandLordReply = "thanks",
                            Star = 5,
                            StudentID = 4
                        },
                        new
                        {
                            RateID = 2,
                            Comment = "good",
                            CreatedBy = 4,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(2058),
                            HouseID = 1,
                            LandLordReply = "thanks",
                            Star = 5,
                            StudentID = 4
                        },
                        new
                        {
                            RateID = 3,
                            Comment = "good",
                            CreatedBy = 4,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(2060),
                            HouseID = 2,
                            LandLordReply = "thanks",
                            Star = 5,
                            StudentID = 4
                        },
                        new
                        {
                            RateID = 4,
                            Comment = "good",
                            CreatedBy = 4,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(2061),
                            HouseID = 3,
                            LandLordReply = "thanks",
                            Star = 5,
                            StudentID = 4
                        });
                });

            modelBuilder.Entity("MockPJ.Models.Report", b =>
                {
                    b.Property<int>("ReportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportID"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HouseID")
                        .HasColumnType("int");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ReportID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HouseID");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("StudentID");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("MockPJ.Models.Request", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RequestID");

                    b.HasIndex("UserID");

                    b.ToTable("Request");

                    b.HasData(
                        new
                        {
                            RequestID = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(2111),
                            RequestType = 0,
                            Status = 0,
                            UserID = 3
                        },
                        new
                        {
                            RequestID = 2,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(2114),
                            Description = "have AC and near school",
                            RequestType = 1,
                            Status = 0,
                            UserID = 4
                        },
                        new
                        {
                            RequestID = 3,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(2116),
                            Description = "cheap water",
                            RequestType = 1,
                            Status = 0,
                            UserID = 4
                        });
                });

            modelBuilder.Entity("MockPJ.Models.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomID"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingNumber")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentAmountOfPeople")
                        .HasColumnType("int");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<int>("HouseID")
                        .HasColumnType("int");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxAmountOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RoomPrice")
                        .HasColumnType("real");

                    b.Property<int?>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("RoomID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HouseID");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("RoomTypeID");

                    b.HasIndex("StatusID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomID = 1,
                            Area = "20m2",
                            BuildingNumber = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1901),
                            CurrentAmountOfPeople = 0,
                            FloorNumber = 1,
                            HouseID = 1,
                            MaxAmountOfPeople = 3,
                            RoomName = "101",
                            RoomPrice = 1000000f,
                            RoomTypeID = 1,
                            StatusID = 1
                        },
                        new
                        {
                            RoomID = 2,
                            Area = "20m2",
                            BuildingNumber = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1915),
                            CurrentAmountOfPeople = 1,
                            FloorNumber = 1,
                            HouseID = 1,
                            MaxAmountOfPeople = 3,
                            RoomName = "102",
                            RoomPrice = 900000f,
                            RoomTypeID = 1,
                            StatusID = 1
                        },
                        new
                        {
                            RoomID = 3,
                            Area = "25m2",
                            BuildingNumber = 2,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1929),
                            CurrentAmountOfPeople = 0,
                            FloorNumber = 1,
                            HouseID = 2,
                            MaxAmountOfPeople = 3,
                            RoomName = "103",
                            RoomPrice = 3000000f,
                            RoomTypeID = 3,
                            StatusID = 1
                        },
                        new
                        {
                            RoomID = 4,
                            Area = "28m2",
                            BuildingNumber = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1931),
                            CurrentAmountOfPeople = 0,
                            FloorNumber = 1,
                            HouseID = 2,
                            MaxAmountOfPeople = 3,
                            RoomName = "104",
                            RoomPrice = 4000000f,
                            RoomTypeID = 3,
                            StatusID = 1
                        },
                        new
                        {
                            RoomID = 5,
                            Area = "40m2",
                            BuildingNumber = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1933),
                            CurrentAmountOfPeople = 0,
                            FloorNumber = 1,
                            HouseID = 3,
                            MaxAmountOfPeople = 3,
                            RoomName = "105",
                            RoomPrice = 10000000f,
                            RoomTypeID = 2,
                            StatusID = 1
                        });
                });

            modelBuilder.Entity("MockPJ.Models.RoomHistory", b =>
                {
                    b.Property<int>("RoomHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomHistoryID"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("RoomHistoryID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("RoomID");

                    b.ToTable("RoomHistories");
                });

            modelBuilder.Entity("MockPJ.Models.RoomImage", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("ImageID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("RoomID");

                    b.ToTable("RoomImages");

                    b.HasData(
                        new
                        {
                            ImageID = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1997),
                            ImageLink = "link",
                            RoomID = 1
                        },
                        new
                        {
                            ImageID = 2,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(2004),
                            ImageLink = "link",
                            RoomID = 2
                        },
                        new
                        {
                            ImageID = 3,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(2005),
                            ImageLink = "link",
                            RoomID = 3
                        },
                        new
                        {
                            ImageID = 4,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(2006),
                            ImageLink = "link",
                            RoomID = 4
                        },
                        new
                        {
                            ImageID = 5,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(2008),
                            ImageLink = "link",
                            RoomID = 5
                        });
                });

            modelBuilder.Entity("MockPJ.Models.RoomType", b =>
                {
                    b.Property<int>("RoomTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomTypeID");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            RoomTypeID = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1835),
                            RoomTypeName = "Shared hostel"
                        },
                        new
                        {
                            RoomTypeID = 2,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1837),
                            RoomTypeName = "Apartment"
                        },
                        new
                        {
                            RoomTypeID = 3,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1839),
                            RoomTypeName = "Mini apartment"
                        },
                        new
                        {
                            RoomTypeID = 4,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1840),
                            RoomTypeName = "Homestays"
                        });
                });

            modelBuilder.Entity("MockPJ.Models.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusID");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusID = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1722),
                            StatusName = "Available"
                        },
                        new
                        {
                            StatusID = 2,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1725),
                            StatusName = "Not Available"
                        });
                });

            modelBuilder.Entity("MockPJ.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("AddressID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacebookURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityCardBackSideImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityCardFrontSideImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<bool?>("Verified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VerrifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID");

                    b.HasIndex("AddressID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DisplayName")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LastModifiedBy");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Active = true,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 13, DateTimeKind.Utc).AddTicks(9543),
                            DisplayName = "Admin",
                            Email = "admin@gmail.com",
                            Password = "$2a$11$npJQLMKo9d5tWsfJVw6nb.Nj5YpCgFSPR/DFKOc0IPfhRjBfb2CaW",
                            PhoneNumber = "0123456789",
                            RoleID = 1,
                            Verified = false
                        },
                        new
                        {
                            UserID = 2,
                            Active = true,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 13, DateTimeKind.Utc).AddTicks(9555),
                            DisplayName = "Staff",
                            Email = "staff@gmail.com",
                            Password = "$2a$11$npJQLMKo9d5tWsfJVw6nb.Nj5YpCgFSPR/DFKOc0IPfhRjBfb2CaW",
                            PhoneNumber = "0123456789",
                            RoleID = 2,
                            Verified = false
                        },
                        new
                        {
                            UserID = 3,
                            Active = true,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 13, DateTimeKind.Utc).AddTicks(9557),
                            DisplayName = "LandLord",
                            Email = "landlord@gmail.com",
                            Password = "$2a$11$npJQLMKo9d5tWsfJVw6nb.Nj5YpCgFSPR/DFKOc0IPfhRjBfb2CaW",
                            PhoneNumber = "0123456789",
                            RoleID = 3,
                            Verified = false
                        },
                        new
                        {
                            UserID = 4,
                            Active = true,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 13, DateTimeKind.Utc).AddTicks(9558),
                            DisplayName = "Student",
                            Email = "student@gmail.com",
                            Password = "$2a$11$npJQLMKo9d5tWsfJVw6nb.Nj5YpCgFSPR/DFKOc0IPfhRjBfb2CaW",
                            PhoneNumber = "0123456789",
                            RoleID = 4,
                            Verified = false
                        });
                });

            modelBuilder.Entity("MockPJ.Models.UserRole", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 2, 875, DateTimeKind.Utc).AddTicks(1747),
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = 2,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 2, 875, DateTimeKind.Utc).AddTicks(1752),
                            RoleName = "Staff"
                        },
                        new
                        {
                            RoleID = 3,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 2, 875, DateTimeKind.Utc).AddTicks(1753),
                            RoleName = "LandLord"
                        },
                        new
                        {
                            RoleID = 4,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 2, 875, DateTimeKind.Utc).AddTicks(1754),
                            RoleName = "Student"
                        });
                });

            modelBuilder.Entity("MockPJ.Models.Village", b =>
                {
                    b.Property<int>("VillageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VillageId"));

                    b.Property<int>("CommuneID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VillageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VillageId");

                    b.HasIndex("CommuneID");

                    b.ToTable("Villages");

                    b.HasData(
                        new
                        {
                            VillageId = 1,
                            CommuneID = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 21, 8, 3, 14, DateTimeKind.Utc).AddTicks(1443),
                            VillageName = "Village A"
                        });
                });

            modelBuilder.Entity("MockPJ.Models.Campus", b =>
                {
                    b.HasOne("MockPJ.Models.Address", "Address")
                        .WithMany("Campuses")
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("MockPJ.Models.Commune", b =>
                {
                    b.HasOne("MockPJ.Models.District", "District")
                        .WithMany("Communes")
                        .HasForeignKey("DistrictID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("MockPJ.Models.House", b =>
                {
                    b.HasOne("MockPJ.Models.Address", "Address")
                        .WithOne("House")
                        .HasForeignKey("MockPJ.Models.House", "AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MockPJ.Models.Campus", "Campus")
                        .WithMany("Houses")
                        .HasForeignKey("CampusID");

                    b.HasOne("MockPJ.Models.User", "Creator")
                        .WithMany("CreateHouses")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("MockPJ.Models.User", "LandLord")
                        .WithMany("OwnHouses")
                        .HasForeignKey("LandLordID");

                    b.HasOne("MockPJ.Models.User", "Modifier")
                        .WithMany("ModifyHouses")
                        .HasForeignKey("LastModifiedBy");

                    b.HasOne("MockPJ.Models.Village", "Village")
                        .WithMany("Houses")
                        .HasForeignKey("VillageID");

                    b.Navigation("Address");

                    b.Navigation("Campus");

                    b.Navigation("Creator");

                    b.Navigation("LandLord");

                    b.Navigation("Modifier");

                    b.Navigation("Village");
                });

            modelBuilder.Entity("MockPJ.Models.HouseImage", b =>
                {
                    b.HasOne("MockPJ.Models.User", "Creator")
                        .WithMany("CreateHouseImages")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("MockPJ.Models.House", "House")
                        .WithMany("HouseImages")
                        .HasForeignKey("HouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MockPJ.Models.User", "Modifier")
                        .WithMany("ModifyHouseImages")
                        .HasForeignKey("LastModifiedBy");

                    b.Navigation("Creator");

                    b.Navigation("House");

                    b.Navigation("Modifier");
                });

            modelBuilder.Entity("MockPJ.Models.Rate", b =>
                {
                    b.HasOne("MockPJ.Models.User", "Creator")
                        .WithMany("CreateRates")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("MockPJ.Models.House", "House")
                        .WithMany("Rates")
                        .HasForeignKey("HouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MockPJ.Models.User", "Modifier")
                        .WithMany("ModifyRates")
                        .HasForeignKey("LastModifiedBy");

                    b.HasOne("MockPJ.Models.User", "Student")
                        .WithMany("StudentRates")
                        .HasForeignKey("StudentID");

                    b.Navigation("Creator");

                    b.Navigation("House");

                    b.Navigation("Modifier");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MockPJ.Models.Report", b =>
                {
                    b.HasOne("MockPJ.Models.User", "Creator")
                        .WithMany("CreateReports")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("MockPJ.Models.House", "House")
                        .WithMany("Reports")
                        .HasForeignKey("HouseID");

                    b.HasOne("MockPJ.Models.User", "Modifier")
                        .WithMany("ModifyReports")
                        .HasForeignKey("LastModifiedBy");

                    b.HasOne("MockPJ.Models.User", "Student")
                        .WithMany("StudentReports")
                        .HasForeignKey("StudentID");

                    b.Navigation("Creator");

                    b.Navigation("House");

                    b.Navigation("Modifier");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MockPJ.Models.Request", b =>
                {
                    b.HasOne("MockPJ.Models.User", "User")
                        .WithMany("UserRequests")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MockPJ.Models.Room", b =>
                {
                    b.HasOne("MockPJ.Models.User", "Creator")
                        .WithMany("CreateRooms")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("MockPJ.Models.House", "House")
                        .WithMany("Rooms")
                        .HasForeignKey("HouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MockPJ.Models.User", "Modifier")
                        .WithMany("ModifyRooms")
                        .HasForeignKey("LastModifiedBy");

                    b.HasOne("MockPJ.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID");

                    b.HasOne("MockPJ.Models.Status", "Status")
                        .WithMany("Rooms")
                        .HasForeignKey("StatusID");

                    b.Navigation("Creator");

                    b.Navigation("House");

                    b.Navigation("Modifier");

                    b.Navigation("RoomType");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("MockPJ.Models.RoomHistory", b =>
                {
                    b.HasOne("MockPJ.Models.User", "Creator")
                        .WithMany("CreateRoomHistories")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("MockPJ.Models.User", "Modifier")
                        .WithMany("ModifyRoomHistories")
                        .HasForeignKey("LastModifiedBy");

                    b.HasOne("MockPJ.Models.Room", "Room")
                        .WithMany("RoomHistories")
                        .HasForeignKey("RoomID");

                    b.Navigation("Creator");

                    b.Navigation("Modifier");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MockPJ.Models.RoomImage", b =>
                {
                    b.HasOne("MockPJ.Models.User", "Creator")
                        .WithMany("CreateRoomImages")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("MockPJ.Models.User", "Modifier")
                        .WithMany("ModifyRoomImages")
                        .HasForeignKey("LastModifiedBy");

                    b.HasOne("MockPJ.Models.Room", "Room")
                        .WithMany("RoomImages")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Modifier");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MockPJ.Models.User", b =>
                {
                    b.HasOne("MockPJ.Models.Address", "Address")
                        .WithMany("Users")
                        .HasForeignKey("AddressID");

                    b.HasOne("MockPJ.Models.User", "Creator")
                        .WithMany("CreateUsers")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("MockPJ.Models.User", "Modifier")
                        .WithMany("ModifyUsers")
                        .HasForeignKey("LastModifiedBy");

                    b.HasOne("MockPJ.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Creator");

                    b.Navigation("Modifier");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MockPJ.Models.Village", b =>
                {
                    b.HasOne("MockPJ.Models.Commune", "Commune")
                        .WithMany("Villages")
                        .HasForeignKey("CommuneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commune");
                });

            modelBuilder.Entity("MockPJ.Models.Address", b =>
                {
                    b.Navigation("Campuses");

                    b.Navigation("House")
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MockPJ.Models.Campus", b =>
                {
                    b.Navigation("Houses");
                });

            modelBuilder.Entity("MockPJ.Models.Commune", b =>
                {
                    b.Navigation("Villages");
                });

            modelBuilder.Entity("MockPJ.Models.District", b =>
                {
                    b.Navigation("Communes");
                });

            modelBuilder.Entity("MockPJ.Models.House", b =>
                {
                    b.Navigation("HouseImages");

                    b.Navigation("Rates");

                    b.Navigation("Reports");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("MockPJ.Models.Room", b =>
                {
                    b.Navigation("RoomHistories");

                    b.Navigation("RoomImages");
                });

            modelBuilder.Entity("MockPJ.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("MockPJ.Models.Status", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("MockPJ.Models.User", b =>
                {
                    b.Navigation("CreateHouseImages");

                    b.Navigation("CreateHouses");

                    b.Navigation("CreateRates");

                    b.Navigation("CreateReports");

                    b.Navigation("CreateRoomHistories");

                    b.Navigation("CreateRoomImages");

                    b.Navigation("CreateRooms");

                    b.Navigation("CreateUsers");

                    b.Navigation("ModifyHouseImages");

                    b.Navigation("ModifyHouses");

                    b.Navigation("ModifyRates");

                    b.Navigation("ModifyReports");

                    b.Navigation("ModifyRoomHistories");

                    b.Navigation("ModifyRoomImages");

                    b.Navigation("ModifyRooms");

                    b.Navigation("ModifyUsers");

                    b.Navigation("OwnHouses");

                    b.Navigation("StudentRates");

                    b.Navigation("StudentReports");

                    b.Navigation("UserRequests");
                });

            modelBuilder.Entity("MockPJ.Models.UserRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MockPJ.Models.Village", b =>
                {
                    b.Navigation("Houses");
                });
#pragma warning restore 612, 618
        }
    }
}
